---
- name: Ensure the Laravel directory exists
  ansible.builtin.file:
    path: "{{ laravel_app_path | default('/var/www/html') }}"
    state: directory
    mode: '0755'
    owner: "{{ ansible_env.USER | default('root') }}"
    group: "{{ ansible_env.USER | default('root') }}"
  become: true

- name: Remove existing Laravel directory
  ansible.builtin.file:
    path: "{{ laravel_app_path | default('/var/www/html') }}"
    state: absent
  become: true
  when: laravel_force_deploy | default(false) | bool

- name: Clone Laravel repository
  ansible.builtin.git:
    repo: "{{ laravel_repo | default('https://github.com/Practical-DevOps/app-for-devops.git') }}"
    dest: "{{ laravel_app_path | default('/var/www/html') }}"
    version: "{{ laravel_version | default('main') }}"
    force: yes
  become: true
  register: git_clone_result
  failed_when: git_clone_result.rc != 0

- name: Set correct permissions for Laravel directory
  ansible.builtin.file:
    path: "{{ laravel_app_path | default('/var/www/html') }}"
    state: directory
    owner: "{{ webserver_user | default('www-data') }}"
    group: "{{ webserver_group | default('www-data') }}"
    mode: '0755'
    recurse: true
  become: true

- name: Install PHP dependencies with Composer
  become: yes
  become_user: www-data
  ansible.builtin.command: composer install
  args:
    chdir: /var/www/laravel

- name: Install Node.js dependencies with npm
  command: npm install
  args:
    chdir: /var/www/html

- name: Build frontend assets with npm
  command: npm run build
  args:
    chdir: /var/www/html

- name: Create `.env` file
  template:
    src: ".env.j2"
    dest: "/var/www/html/.env"
  notify: Restart Apache

- name: Generate Laravel application key
  command: php artisan key:generate
  args:
    chdir: /var/www/html

- name: Run Laravel database migrations
  command: php artisan migrate --force
  args:
    chdir: /var/www/html